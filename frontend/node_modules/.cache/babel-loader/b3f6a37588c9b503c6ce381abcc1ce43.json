{"ast":null,"code":"var _jsxFileName = \"/Users/Home/github/rest-api-node-react/frontend/src/Components/PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport isAuthenticated from './isAuthenticated';\nimport { useLocation } from 'react-router-dom'; // PrivateRoute will be a stateless functional component that only takes props\n// function PrivateRoute(props){\n// // props has an object called children which contains the child Components\n//   return(\n//     <Route render={(props.location) => {\n//       console.log(props.location);\n//       console.log(props.children)\n//       if(isAuthenticated()) {\n//         return(props.children);\n//       } else {\n//         return(\n//           <Redirect to={{pathname: '/login', state: {from: location}}}/>\n//         );\n//       }\n//     }}/>\n//   );\n// };\n\nfunction PrivateRoute({\n  children,\n  ...rest\n}) {\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: ({\n      location\n    }) => isAuthenticated() ? children : /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: \"/login\",\n        state: {\n          from: location\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }));\n}\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/Users/Home/github/rest-api-node-react/frontend/src/Components/PrivateRoute.js"],"names":["React","Route","Redirect","isAuthenticated","useLocation","PrivateRoute","children","rest","location","pathname","state","from"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,YAAT,CAAsB;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAtB,EAA6C;AAC3C,sBACE,oBAAC,KAAD,oBACMA,IADN;AAEE,IAAA,MAAM,EAAE,CAAC;AAAEC,MAAAA;AAAF,KAAD,KACNL,eAAe,KACbG,QADa,gBAGb,oBAAC,QAAD;AACE,MAAA,EAAE,EAAE;AACFG,QAAAA,QAAQ,EAAE,QADR;AAEFC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEH;AAAR;AAFL,OADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAiBD;;AAED,eAAeH,YAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport isAuthenticated from './isAuthenticated';\nimport { useLocation } from 'react-router-dom';\n\n// PrivateRoute will be a stateless functional component that only takes props\n// function PrivateRoute(props){\n// // props has an object called children which contains the child Components\n//   return(\n//     <Route render={(props.location) => {\n//       console.log(props.location);\n//       console.log(props.children)\n//       if(isAuthenticated()) {\n//         return(props.children);\n//       } else {\n//         return(\n//           <Redirect to={{pathname: '/login', state: {from: location}}}/>\n//         );\n//       }\n//     }}/>\n//   );\n// };\n\nfunction PrivateRoute({ children, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isAuthenticated() ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}